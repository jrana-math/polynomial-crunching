--The purpose of this code is to check how weights intermediate betweens the ones we've been testing behave.
--It takes a example that produces a match with three variables weighted 1 and produces 10 intermediate weights,
--working up to a non-match that has four variables weighted 1. The goal is to see where the matches stop occurring.
--The only change from previous programs is how the weights are generated.

weights = {};
weight = {};
matches = {};

for i to 12 do 
(
    weight = {48-i, 0, 0, 48-i, 0, 48-i, 3*i, 0, 0, 0, 0, 0, 0, 0};
    weights = append(weights, weight);
);

for a to #weights-1 do
(
    R = QQ[splice {x_11 .. x_17, x_21 .. x_27}, MonomialOrder=>{Weights=>weights#a, Lex}];
    N = vars R;
    M = matrix{{N_(0, 0), N_(0, 1), N_(0, 2), N_(0, 3), N_(0, 4), N_(0, 5), N_(0, 6)}, {N_(0, 7), N_(0, 8), N_(0, 9), N_(0, 10), N_(0, 11), N_(0, 12), N_(0, 13)}};
    L = subsets(7, 6);
    notgroebner = {};

    for i to (#L-1) do 
    (
	M1 = matrix{{1, 1, 1}, {M_(0, L#i#0), M_(0, L#i#1), M_(0, L#i#2)}, {M_(1, L#i#0), M_(1, L#i#1), M_(1, L#i#2)}};
	M2 = matrix{{1, 1, 1}, {M_(0, L#i#0), M_(0, L#i#3), M_(0, L#i#4)}, {M_(1, L#i#0), M_(1, L#i#3), M_(1, L#i#4)}};
	M3 = matrix{{1, 1, 1}, {M_(0, L#i#1), M_(0, L#i#3), M_(0, L#i#5)}, {M_(1, L#i#1), M_(1, L#i#3), M_(1, L#i#5)}};
	M4 = matrix{{1, 1, 1}, {M_(0, L#i#2), M_(0, L#i#4), M_(0, L#i#5)}, {M_(1, L#i#2), M_(1, L#i#4), M_(1, L#i#5)}};
	M5 = matrix{{1, 1, 1}, {M_(0, L#i#0), M_(0, L#i#1), M_(0, L#i#3)}, {M_(1, L#i#0), M_(1, L#i#1), M_(1, L#i#3)}};
	M6 = matrix{{1, 1, 1}, {M_(0, L#i#0), M_(0, L#i#2), M_(0, L#i#4)}, {M_(1, L#i#0), M_(1, L#i#2), M_(1, L#i#4)}};
	M7 = matrix{{1, 1, 1}, {M_(0, L#i#1), M_(0, L#i#2), M_(0, L#i#5)}, {M_(1, L#i#1), M_(1, L#i#2), M_(1, L#i#5)}};
	M8 = matrix{{1, 1, 1}, {M_(0, L#i#3), M_(0, L#i#4), M_(0, L#i#5)}, {M_(1, L#i#3), M_(1, L#i#4), M_(1, L#i#5)}};
	g = det(M1)*det(M2)*det(M3)*det(M4)-det(M5)*det(M6)*det(M7)*det(M8);
	notgroebner = append(notgroebner, g);
    );

    I = ideal(notgroebner);
    groebner = gens gb I;
    notgroebnersize = #notgroebner;
    groebnersize = numgens source groebner;
    
    n=0;
    for i to groebnersize-1 do
    (
        for j to notgroebnersize-1 do 
	(
	    if (groebner_(0, i) == notgroebner#j or (-1)*groebner_(0, i) == notgroebner#j) then
	    (
		n=n+1;
		break;
	    );
	);
    );
    
    text = "The total number of matches is ";
    nonumber = toString(n);
    dot = ".";
    p = text | nonumber | dot;
    print p;
    print weights#a;
    if n == groebnersize then matches = append(matches, weights#a);
    );
